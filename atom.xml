<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>Mathripper</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-23T11:10:16.204Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mathripper</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>装修相关</title>
    <link href="http://yoursite.com/2019/11/23/%E8%A3%85%E4%BF%AE%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2019/11/23/%E8%A3%85%E4%BF%AE%E7%9B%B8%E5%85%B3/</id>
    <published>2019-11-23T10:59:46.000Z</published>
    <updated>2019-11-23T11:10:16.204Z</updated>
    
    <content type="html"><![CDATA[<h2 id="验房"><a href="#验房" class="headerlink" title="验房"></a>验房</h2><ul><li>墙体裂缝</li><li>墙体空洞</li><li>房屋方正（量对角线）</li><li>墙面平整</li></ul><h2 id="装修"><a href="#装修" class="headerlink" title="装修"></a>装修</h2><ul><li>全屋新风系统</li><li>一体台下洗手池</li><li>卫生间阻水槽要嵌入墙壁</li><li>衣柜安装感应灯</li><li>全屋隔音（隔音胶条，玻璃）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;验房&quot;&gt;&lt;a href=&quot;#验房&quot; class=&quot;headerlink&quot; title=&quot;验房&quot;&gt;&lt;/a&gt;验房&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;墙体裂缝&lt;/li&gt;
&lt;li&gt;墙体空洞&lt;/li&gt;
&lt;li&gt;房屋方正（量对角线）&lt;/li&gt;
&lt;li&gt;墙面平整&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="乱弹" scheme="http://yoursite.com/categories/%E4%B9%B1%E5%BC%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>tf 2.0 环境配置注意事项</title>
    <link href="http://yoursite.com/2019/11/19/tf-2-0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2019/11/19/tf-2-0-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2019-11-19T01:32:05.000Z</published>
    <updated>2019-11-19T01:41:14.279Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>当前版本：tensorflow-2.0.0</p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><strong>ide 对 tf2.0 代码补全失效</strong><br>由于 tf 2.0 的文档目录中含有 <code>tensorflow-core</code> 和 <code>tensorflow</code> 两个文件夹，tf 各种代码在 <code>tensorflow-core</code> 包中，但是代码中的引用依然是 <code>from tensorflow import xxx</code>，然而 <code>tensorflow</code> 包中并没有 <code>xxx</code>， 这就导致 ide 的代码自动补全功能失效，所以需要将 <code>/your/path/to/anaconda/site-packages</code> 中的 <code>tensorflow</code> 文件夹删除，将 <code>tensorflow-core</code> 更名为 <code>tensorflow</code>。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;当前版本：tensorflow-2.0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="环境配置" scheme="http://yoursite.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>mac pfctl 屏蔽 ip</title>
    <link href="http://yoursite.com/2019/11/18/mac-pfctl-%E5%B1%8F%E8%94%BD-ip/"/>
    <id>http://yoursite.com/2019/11/18/mac-pfctl-%E5%B1%8F%E8%94%BD-ip/</id>
    <published>2019-11-18T14:02:11.000Z</published>
    <updated>2019-11-18T14:22:53.694Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>阻止与目标 ip 建立连接</p></blockquote><h2 id="查看-ip-连接情况"><a href="#查看-ip-连接情况" class="headerlink" title="查看 ip 连接情况"></a>查看 ip 连接情况</h2><p>运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$1</span> =~ (tcp|udp) ]] || [ -z <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">    :</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> Wrong option!</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">'tput clear;exit 0'</span> 2</span><br><span class="line">col=$(tput cols)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    tput clear</span><br><span class="line">    lsof -nPi4<span class="variable">$1</span> |awk <span class="string">'NR&gt;1&#123;split($9,ip,"-&gt;")</span></span><br><span class="line"><span class="string">split(ip[1],ip1,":")</span></span><br><span class="line"><span class="string">split(ip[2],ip2,":")</span></span><br><span class="line"><span class="string">printf("%-10s%5s %-15s%1s%5s %1s %-15s%1s%5s %s\n",$1,$2,ip1[1],(NR&gt;1?":":""),ip1[2],ip[2]!=""?"&gt;":"",ip2[1],length(ip2)&gt;1?":":"",ip2[2],$10)</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line">    tput cup 0 <span class="variable">$col</span></span><br><span class="line">    sleep 2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>假设该脚本保存为 <code>./ports.sh</code>，则运行 <code>./ports.sh tcp</code></p><a id="more"></a><h2 id="屏蔽相应-ip"><a href="#屏蔽相应-ip" class="headerlink" title="屏蔽相应 ip"></a>屏蔽相应 ip</h2><p>从上述运行结果中找到想要屏蔽的 ip，分别执行：</p><ol><li><p>修改 <code>/etc/pf.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/pf.conf</span><br></pre></td></tr></table></figure><p>增加如下内容：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义要阻止的IP地址表，用表的好处是如果有多个IP，你都可以添加到这里，逗号隔开即可</span></span><br><span class="line">table &lt;badguys&gt; &#123; 172.16.1.100,172.16.1.101 &#125;</span><br><span class="line"><span class="comment">#下面语句代表阻止从MacOS访问badguys里面定义的IP</span></span><br><span class="line">block out quick from any to &lt;badguys&gt;</span><br></pre></td></tr></table></figure></li><li><p>启用 pf<br>终端敲命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pfctl -evf /etc/pf.conf</span><br></pre></td></tr></table></figure></li><li><p>如果不想阻止这些 IP 了，可以使用以下命令关闭 pf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pfctl -dv</span><br></pre></td></tr></table></figure></li></ol><p>很多破解软件拥有不止一个验证服务器，则服务重复以上过程，直至屏蔽所有验证服务器的 ip。</p><blockquote><p>注：该方法重启后无效</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;阻止与目标 ip 建立连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;查看-ip-连接情况&quot;&gt;&lt;a href=&quot;#查看-ip-连接情况&quot; class=&quot;headerlink&quot; title=&quot;查看 ip 连接情况&quot;&gt;&lt;/a&gt;查看 ip 连接情况&lt;/h2&gt;&lt;p&gt;运行脚本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [[ &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; =~ (tcp|udp) ]] || [ -z &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; ];&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; Wrong option!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;trap&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;tput clear;exit 0&#39;&lt;/span&gt; 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;col=$(tput cols)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tput clear&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lsof -nPi4&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; |awk &lt;span class=&quot;string&quot;&gt;&#39;NR&amp;gt;1&amp;#123;split($9,ip,&quot;-&amp;gt;&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;split(ip[1],ip1,&quot;:&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;split(ip[2],ip2,&quot;:&quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;printf(&quot;%-10s%5s %-15s%1s%5s %1s %-15s%1s%5s %s\n&quot;,$1,$2,ip1[1],(NR&amp;gt;1?&quot;:&quot;:&quot;&quot;),ip1[2],ip[2]!=&quot;&quot;?&quot;&amp;gt;&quot;:&quot;&quot;,ip2[1],length(ip2)&amp;gt;1?&quot;:&quot;:&quot;&quot;,ip2[2],$10)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tput cup 0 &lt;span class=&quot;variable&quot;&gt;$col&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;假设该脚本保存为 &lt;code&gt;./ports.sh&lt;/code&gt;，则运行 &lt;code&gt;./ports.sh tcp&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>zsh 配置环境变量</title>
    <link href="http://yoursite.com/2019/11/18/zsh-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2019/11/18/zsh-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</id>
    <published>2019-11-18T13:06:53.000Z</published>
    <updated>2019-11-18T14:23:34.340Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考</p><ol><li><a href="http://postgresapp.com/" target="_blank" rel="noopener">http://postgresapp.com/</a></li><li><a href="http://postgresapp.com/documentation/cli-tools.html" target="_blank" rel="noopener">http://postgresapp.com/documentation/cli-tools.html</a></li><li><a href="http://www.yiibai.com/postgresql/2013080439.html" target="_blank" rel="noopener">http://www.yiibai.com/postgresql/2013080439.html</a></li><li>终极 Shell——ZSH： <a href="https://zhuanlan.zhihu.com/p/19556676" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/19556676</a></li><li>Zsh安装配置指南 <a href="http://www.linuxidc.com/Linux/2013-09/90377.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2013-09/90377.htm</a></li></ol></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>mac 一般使用bash作为默认shell<br>在 Linux 里执行这个命令和 Mac 略有不同，你会发现 Mac 多了一个 zsh，也就是说 OS X 系统预装了个 zsh，这是个神马 Shell 呢？<br>目前常用的 Linux 系统和 OS X 系统的默认 Shell 都是 bash，但是真正强大的 Shell 是深藏不露的 zsh， 这货绝对是马车中的跑车，跑车中的飞行车，史称『终极 Shell』，但是由于配置过于复杂，所以初期无人问津，很多人跑过来看看 zsh 的配置指南，什么都不说转身就走了。直到有一天，国外有个穷极无聊的程序员开发出了一个能够让你快速上手的zsh项目，叫做「oh my zsh」，Github 网址是：<a href="https://github.com/robbyrussell/oh-my-zsh**" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh**</a>。</p><a id="more"></a><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="bash中设置环境变量path的几种方法"><a href="#bash中设置环境变量path的几种方法" class="headerlink" title="bash中设置环境变量path的几种方法"></a>bash中设置环境变量path的几种方法</h3><p>Mac系统的环境变量，加载顺序为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/paths</span><br><span class="line">~/.bash_profile</span><br><span class="line">~/.bash_login</span><br><span class="line">~/.profile</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><p>当然<code>/etc/profile</code>和<code>/etc/paths</code>是系统级别的，系统启动就会加载，后面几个是当前用户级的环境变量。后面3个按照从前往后的顺序读取，如果<code>/.bash_profile</code>文件存在，则后面的几个文件就会被忽略不读了，如果<code>/.bash_profile</code>文件不存在，才会以此类推读取后面的文件。<code>~/.bashrc</code>没有上述规则，它是 bash shell 打开的时候载入的。</p><p>如果没特殊说明,设置PATH的语法都为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中间用冒号隔开</span></span><br><span class="line">     <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:&lt;PATH 1&gt;:&lt;PATH 2&gt;:&lt;PATH 3&gt;:------:&lt;PATH N&gt;</span><br></pre></td></tr></table></figure><h3 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h3><p>下面的几个文件设置是全局的，修改时需要root权限</p><p>1）<code>/etc/paths</code> （全局建议修改这个文件)<br>编辑 <code>paths</code>，将环境变量添加到 paths 文件中 ，一行一个路径  </p><blockquote><p>Hint：输入环境变量时，不用一个一个地输入，只要拖动文件夹到 Terminal 里就可以了。</p></blockquote><p>2）<code>/etc/profile</code> （建议不修改这个文件 ）<br>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p><p>3）<code>/etc/bashrc</code> （一般在这个文件中添加系统级环境变量）<br>全局（公有）配置，bash shell 执行时，不管是何种方式，都会读取此文件。</p><p>4）<br>1.创建一个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo touch /etc/paths.d/mysql</span><br></pre></td></tr></table></figure><p>2.用 vim 打开这个文件（如果是以 open -t 的方式打开，则不允许编辑）  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/paths.d/mysql</span><br></pre></td></tr></table></figure><p>3.编辑该文件，键入路径并保存（关闭该 Terminal 窗口并重新打开一个，就能使用 mysql 命令了）  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/mysql/bin</span><br></pre></td></tr></table></figure><p>据说，这样可以自己生成新的文件，不用把变量全都放到 paths 一个文件里，方便管理。</p><h3 id="单个用户设置"><a href="#单个用户设置" class="headerlink" title="单个用户设置"></a>单个用户设置</h3><p>1）<code>~/.bash_profile</code> （任意一个文件中添加用户级环境变量）<br>（注：Linux 里面是 .bashrc 而 Mac 是 .bash_profile）<br>若 bash shell 是以 login 方式执行时，才会读取此文件。该文件仅仅执行一次!默认情况下，他设置一些环境变量<br>设置命令别名 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> ll=’ls -la’</span><br></pre></td></tr></table></figure><p>设置环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/opt/<span class="built_in">local</span>/bin:/opt/<span class="built_in">local</span>/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>2）<code>~/.bashrc</code> 同上  </p><p>如果想立刻生效，则可执行下面的语句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> 相应的文件</span><br></pre></td></tr></table></figure><p>一般环境变量更改后，重启后生效。</p><h2 id="解决-Mac-下配置环境变量在-ZSH-中无效的问题"><a href="#解决-Mac-下配置环境变量在-ZSH-中无效的问题" class="headerlink" title="解决 Mac 下配置环境变量在 ZSH 中无效的问题"></a>解决 Mac 下配置环境变量在 ZSH 中无效的问题</h2><p>在配置 gradle 的时候, 发现在 <code>/etc/profiles</code> 中设置了环境变量后, 还是不能在 zsh 中使用. 但在 Terminal 中可以正常使用. 后来发现是因为没有在 <code>.zshrc</code> 中配置.</p><p>在终端中输入: <code>cat ~/.zshrc</code> 以此来查看 <code>.zshrc</code> 文件, 找到里面的 “ # User configuration “ 部分. 可以看到当前 zsh 支持的所有本地已配置环境变量.</p><p>在 <code>export PATH=”XXXX”</code> 里面追加一条想要配置的环境变量路径.</p><p>重启 item2 即可</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://postgresapp.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://postgresapp.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://postgresapp.com/documentation/cli-tools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://postgresapp.com/documentation/cli-tools.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.yiibai.com/postgresql/2013080439.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.yiibai.com/postgresql/2013080439.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;终极 Shell——ZSH： &lt;a href=&quot;https://zhuanlan.zhihu.com/p/19556676&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zhuanlan.zhihu.com/p/19556676&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zsh安装配置指南 &lt;a href=&quot;http://www.linuxidc.com/Linux/2013-09/90377.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.linuxidc.com/Linux/2013-09/90377.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;mac 一般使用bash作为默认shell&lt;br&gt;在 Linux 里执行这个命令和 Mac 略有不同，你会发现 Mac 多了一个 zsh，也就是说 OS X 系统预装了个 zsh，这是个神马 Shell 呢？&lt;br&gt;目前常用的 Linux 系统和 OS X 系统的默认 Shell 都是 bash，但是真正强大的 Shell 是深藏不露的 zsh， 这货绝对是马车中的跑车，跑车中的飞行车，史称『终极 Shell』，但是由于配置过于复杂，所以初期无人问津，很多人跑过来看看 zsh 的配置指南，什么都不说转身就走了。直到有一天，国外有个穷极无聊的程序员开发出了一个能够让你快速上手的zsh项目，叫做「oh my zsh」，Github 网址是：&lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh**&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/robbyrussell/oh-my-zsh**&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境配置" scheme="http://yoursite.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
</feed>
